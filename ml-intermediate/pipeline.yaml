meta:
  extract_upstream: True
  extract_product: False

tasks:
  - source: tasks.get.fn
    name: get
    # all products are parametrized (default values are loaded from env.yaml),
    # and can be overriden using the command line interface
    product: "{{path.products}}/{{ 'sample' if sample else 'full' }}/get.parquet"
    params:
      # we can also pass parameters to tasks
      sample: '{{sample}}'

  - source: tasks.features.fn
    name: features
    product: "{{path.products}}/{{ 'sample' if sample else 'full' }}/features.parquet"

  - source: tasks.join.fn
    name: join
    product: "{{path.products}}/{{ 'sample' if sample else 'full' }}/join.parquet"
    # use the on_finish key to run a function upon successful task execution.
    # this is handy for pipeline integration testing:
    # https://ploomber.readthedocs.io/en/stable/user-guide/testing.html
    on_finish: integration_tests.no_missing_values

  - source: fit.py
    name: fit
    product:
        # note that we changed to an HTML extension, conversion is performed
        # automatically
        nb: "{{path.products}}/{{ 'sample' if sample else 'full' }}/nb.html"
        model: "{{path.products}}/{{ 'sample' if sample else 'full' }}/model.pickle"
    # use this parameter to customize the output notebook (optional)
    nbconvert_export_kwargs:
      # do not show input code
      exclude_input: True
      # selectively remove cells based on tags
      config:
        TagRemovePreprocessor: {'remove_cell_tags': ['model-training']}
        HTMLExporter: {'preprocessors': ['nbconvert.preprocessors.TagRemovePreprocessor']}
    # for more information, check out nbconvert's documetation:
    # https://nbconvert.readthedocs.io/en/latest/config_options.html#preprocessor-options